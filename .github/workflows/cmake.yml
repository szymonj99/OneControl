name: CMake

on:
  push:
    branches: [ '*' ]

env:
  BUILD_TYPE: Release

jobs:
  compiling:
    name: "Compiling"
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-latest
            compiler: cl

          - name: Linux GCC
            os: ubuntu-latest
            compiler: gcc

          - name: MacOS Clang
            os: macos-latest
            compiler: llvm

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup C++
        uses: aminya/setup-cpp@v1
        with:
          # Let's add `clangtidy: true` and maybe other possible checks here in the future.
          compiler: ${{ matrix.compiler }}
          #vcvarsall: ${{ contains(matrix.os, 'windows' )}} # I'm not 100% sure what this is tbh.
          cmake: true
          ninja: true

      - name: Download Packages
        if: ${{ contains(matrix.os, 'ubuntu' )}}
        run: sudo apt update && sudo apt install libx11-dev libsfml-dev xorg-dev libopengl-dev mesa-common-dev libudev-dev libopenal-dev libvorbis-dev libflac-dev libncurses-dev
        shell: bash

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
